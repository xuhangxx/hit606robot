<launch>
    
    <include file="$(find control_node)/launch/control_node.launch">
    </include>    

    <include file="$(find velodyne_pointcloud)/launch/VLP16_points.launch">
    </include>

    <!--- Sim Time -->
    <param name="/use_sim_time" value="false" />

    <!-- Set the name of the map yaml file: can be overridden on the command line. -->
     <arg name="map" default="blank_map.yaml" />
    
    <!-- Run the map server with the desired map -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(find indoor_navigation)/maps/$(arg map)"/>

    <!-- Run fake localization compatible with AMCL output -->
     <node pkg="fake_localization" type="fake_localization"  name="fake_localization" output="screen" />
    <!-- For fake localization we need static transforms between /odom and /map and /map and /world -->
     <node pkg="tf" type="static_transform_publisher" name="odom_map_broadcaster" args="0 0 0 0 0 0 /odom /map 100" />

    <!--- Run Rviz-->
    <node pkg="rviz" type="rviz" name="rviz" 
     args="-d $(find laser_scan_matcher)/demo/demo_gmapping.rviz"/>

    
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" clear_params="true">
    <rosparam file="$(find indoor_navigation)/config/config_default/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find indoor_navigation)/config/config_default/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find indoor_navigation)/config/config_default/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find indoor_navigation)/config/config_default/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find indoor_navigation)/config/config_default/base_local_planner_params.yaml" command="load" />
  </node>



    
</launch>
